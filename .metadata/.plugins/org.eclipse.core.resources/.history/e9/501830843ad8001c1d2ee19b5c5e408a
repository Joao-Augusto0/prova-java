package modelo;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Objects;

public class Manutencao {

	int id;
	Date data;
	String equipamento;
	Double custoHora;
	Double tempoGasto;

	SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

	public Manutencao(int id, String data, String equipamento, Double custoHora, Double tempoGasto) {
		try {
			this.id = id;
			this.data = sdf.parse(data);
			this.equipamento = equipamento;
			this.custoHora = custoHora;
			this.tempoGasto = tempoGasto;
		} catch (ParseException e) {
			System.out.println(e);
		}
	}

	public Manutencao(String linha) {

		try {
			this.id = Integer.parseInt(linha.split(";")[0]);
			this.data = sdf.parse(linha.split(";")[1]);
			this.equipamento = linha.split(";")[2];
			this.custoHora = Double.parseDouble(linha.split(";")[3]);
			this.tempoGasto = Double.parseDouble(linha.split(";")[4]);
		} catch (ParseException e) {
			System.out.println(e);
		}

	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public Date getData() {
		return data;
	}

	public void setData(Date data) {
		this.data = data;
	}

	public String getEquipamento() {
		return equipamento;
	}

	public void setEquipamento(String equipamento) {
		this.equipamento = equipamento;
	}

	public Double getCustoHora() {
		return custoHora;
	}

	public void setCustoHora(Double custoHora) {
		this.custoHora = custoHora;
	}

	public Double getTempoGasto() {
		return tempoGasto;
	}

	public void setTempoGasto(Double tempoGasto) {
		this.tempoGasto = tempoGasto;
	}

	public Double getTotal() {
		Double total = getCustoHora() * getTempoGasto();
		return total;
	}

	@Override
	public int hashCode() {
		return Objects.hash(custoHora, data, equipamento, id, tempoGasto);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Manutencao other = (Manutencao) obj;
		return Objects.equals(custoHora, other.custoHora) && Objects.equals(data, other.data)
				&& Objects.equals(equipamento, other.equipamento) && id == other.id
				&& Objects.equals(tempoGasto, other.tempoGasto);
	}

	public String toCSV() {
		return id + ";" + sdf.format(data) + ";" + equipamento + ";" + custoHora + ";" + tempoGasto + "/r/n";
	}

	@Override
	public String toString() {
		return id + "\t" + sdf.format(data) + "\t" + equipamento + "\t" + custoHora + "\t" + tempoGasto + "\n";
	}

}
